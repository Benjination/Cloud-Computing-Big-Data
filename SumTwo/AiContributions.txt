Improvements on HTML inside app.py

Centered Content:
    1.All the page content is wrapped in a <div 
    class="container"> with CSS that centers it
    horizontally (margin: auto) and adds space at the
    top (margin-top: 60px).
    2. The text-align: center property ensures all text 
    and form elements are centered within the container.
Modern Card Design:
    1. The container uses a white background (background: 
    #fff), rounded corners (border-radius: 12px), and 
    a subtle shadow (box-shadow) to create a “card” 
    effect, making the form stand out from the page.
Improved Form Layout:
    1. The form uses display: flex and flex-direction: 
    column to stack input fields vertically with even 
    spacing (gap: 16px).
    2. Input fields have padding, rounded corners, and a light 
    border for a clean look.
Styled Button:
    1. The submit button is styled with a blue background, 
    white text, rounded corners, and a hover effect for 
    better interactivity.
Consistent Typography and Colors:
    1. The page uses a modern sans-serif font (Arial, 
    sans-serif).
    2. Headings and messages use distinct colors for clarity 
    and emphasis.
Responsive and Accessible:
    1. The design is simple and adapts well to different 
    screen sizes.
    2. Placeholder text in inputs helps users understand what to 
    enter.
Summary:
These changes make the page visually appealing, easier to 
use, and more professional. The form is now centered and 
styled like a modern web app, improving both usability and 
aesthetics for my assignment.

POST REDIRECT
The Post/Redirect/Get pattern is a common solution to 
prevent accidental form resubmission and is widely 
recommended for web forms.

Ben: "I put this on here because I found a case where if 
the user has already filled out the form once, and then refreshes 
the page, the user is prompted to resubmit a form. No user 
wants to soo that message." 